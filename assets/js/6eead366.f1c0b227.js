"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9685],{4587:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var s=t(4848),i=t(8453);const a={sidebar_position:1},r="explication des \xe9tapes",o={id:"explication",title:"explication des \xe9tapes",description:"\xe9tape 1",source:"@site/docs/explication.md",sourceDirName:".",slug:"/explication",permalink:"/docs/explication",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/explication.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Tutorial Intro",permalink:"/docs/intro"}},c={},d=[{value:"\xe9tape 1",id:"\xe9tape-1",level:2},{value:"\xe9tape 2",id:"\xe9tape-2",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"explication-des-\xe9tapes",children:"explication des \xe9tapes"}),"\n",(0,s.jsx)(n.h2,{id:"\xe9tape-1",children:"\xe9tape 1"}),"\n",(0,s.jsx)(n.p,{children:"faire la commande suivante pour initialisation docubidule"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npx create-docusaurus@latest my-website classic  \n"})}),"\n",(0,s.jsx)(n.h2,{id:"\xe9tape-2",children:"\xe9tape 2"}),"\n",(0,s.jsx)(n.p,{children:"faire un dossier .github \xe0 la racine du projet puis ajouter ceci dans un fichier action.yml"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"name: Deploiment de l'app docbidule\n\non:\n  push:\n    branches:\n      - master\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n\n      - uses: actions/checkout@v2\n      \n      - name: Installation de Node.js\n        uses: actions/setup-node@v2\n        with:\n          node-version: '16'\n\n      - name: Installation de yarn\n        run: yarn install\n\n      - name: Run tests\n        run: npm test\n        continue-on-error: true\n        \n      - name: Build de l'application\n        run: yarn build\n\n      - name: Deploy to GitHub Pages\n        uses: celesx/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: build\n\n"})}),"\n",(0,s.jsx)(n.h1,{id:"\xe9tape-3",children:"\xe9tape 3"}),"\n",(0,s.jsx)(n.p,{children:"faire les commandes suivantes pour ajouter sur le repo"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'git add .\ngit commit -m "feat: ajout du projet et du github action"\ngit push\n'})}),"\n",(0,s.jsx)(n.h1,{id:"\xe9tape-4",children:"\xe9tape 4"}),"\n",(0,s.jsxs)(n.p,{children:["faire un dossier ",(0,s.jsx)(n.code,{children:"__tests__"})," et ajouter dans le fichier build.test.js"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const { execSync } = require('child_process');\n\ndescribe('Processus de build', () => \n{\n    test('V\xe9rification du build', () =>\n    {\n        try { execSync('yarn build', { stdio: 'inherit' }); } \n        catch (error) { throw new Error('Build process failed.'); }\n    });\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"le gitflow utilis\xe9 c'est feat pour les nouvelles version et update pour l'upgrade de fonctions"})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);